<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yigwoo.simple.persistence.AccountMapper">
    <resultMap id="RoleMap" type="Role" >
        <id property="id" column="id"/>
        <result property="rolename" column="rolename"/>
    </resultMap>
    
    <resultMap id="AccountMap" type="Account">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="email" column="email"/>
        <result property="registerDate" column="register_date"/>
        <collection property="role" resultMap="RoleMap"/>
    </resultMap>

	<cache />
	<insert id="insertAccount" parameterType="Account"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO ACCOUNT
		(USERNAME, EMAIL, PASSWORD, SALT, REGISTER_DATE)
		VALUES
		(#{username}, #{email}, #{password}, #{salt}, #{registerDate})
	</insert>

	<update id="updateAccount" parameterType="Account">
		UPDATE ACCOUNT SET
		EMAIL = #{email},
		PASSWORD = #{password},
		SALT = #{salt}
		WHERE USERNAME = #{username}
	</update>

	<delete id="deleteAccountById" parameterType="int">
		DELETE FROM ACCOUNT WHERE ID = #{id}
	</delete>

	<select id="getAccountById" parameterType="int" resultMap="AccountMap">
		SELECT ID, USERNAME, EMAIL, PASSWORD, SALT, REGISTER_DATE as registerDate
        R.ID, R.ROLENAME
        FROM ACCOUNT A
            LEFT OUTER JOIN ACCOUNT_ROLE AR ON A.ID = AR.ACCOUNT_ID
            LEFT OUTER JOINT ROLE R ON AR.ROLE_ID = R.ID
		WHERE A.ID = #{id}
	</select>

	<select id="getAccountByUsername" parameterType="string"
		resultType="Account">
		SELECT ID, USERNAME, EMAIL, PASSWORD, SALT, REGISTER_DATE as registerDate
		FROM ACCOUNT
		WHERE USERNAME = #{username}
	</select>

	<select id="getAccountByEmail" parameterType="string"
		resultType="Account">
		SELECT ID, USERNAME, EMAIL, PASSWORD, SALT, REGISTER_DATE as registerDate,
		FROM ACCOUNT  
		WHERE EMAIL = #{email}
	</select>
</mapper>